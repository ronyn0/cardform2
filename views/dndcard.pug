extends layout 

block content
  div(class='cardContainer')
    div(class='grid')
      div(class='third')
        div(class='card')
          p(class='largeText') Stats:
          - var pro = 3
            div(class='rounded')
              div(class='stats')
                if(char_info.Save1 == 'STR' || char_info.Save2 == 'STR')
                  p Strength: #{char_info.STR} &#8226; Check: #{(char_info.STR - 10)/2} &#8226; 
                    b Save: #{((char_info.STR - 10)/2) + pro} 
                else 
                  p Strength: #{char_info.STR} &#8226; Check: #{(char_info.STR - 10)/2} &#8226; Save: #{(char_info.STR - 10)/2} 
                ul 
                  each Skill in char_info.Skills
                    if(Skill.Attribute == 'STR' && Skill.IsProficient == false)
                      li #{Skill.Name}: #{(char_info.STR - 10)/2}
                    if(Skill.Attribute == 'STR' && Skill.IsProficient == true)
                      li 
                        b #{Skill.Name}: #{((char_info.STR - 10)/2) + pro}
            br
            div(class='rounded')
              div(class='stats')
                if(char_info.Save1 == 'DEX' || char_info.Save2 == 'DEX')
                  p Dexterity: #{char_info.DEX} &#8226; Check: #{(char_info.DEX - 10)/2} &#8226; 
                    b Save: #{((char_info.DEX - 10)/2) + pro} 
                else 
                  p Dexterity: #{char_info.DEX} &#8226; Check: #{(char_info.DEX - 10)/2} &#8226; Save: #{(char_info.DEX - 10)/2} 
                ul 
                  each Skill in char_info.Skills
                    if(Skill.Attribute == 'DEX' && Skill.IsProficient == false)
                      li #{Skill.Name}: #{(char_info.DEX - 10)/2}
                    if(Skill.Attribute == 'DEX' && Skill.IsProficient == true)
                      li 
                        b #{Skill.Name}: #{((char_info.DEX - 10)/2) + pro}
            br
            div(class='rounded')
              div(class='stats')
                if(char_info.Save1 == 'CON' || char_info.Save2 == 'CON')
                  p Constitution: #{char_info.CON} &#8226; Check: #{(char_info.CON - 10)/2} &#8226; 
                    b Save: #{((char_info.CON - 10)/2) + pro} 
                else 
                  p Constitution: #{char_info.CON} &#8226; Check: #{(char_info.CON - 10)/2} &#8226; Save: #{(char_info.CON - 10)/2}
                ul 
                  each Skill in char_info.Skills
                    if(Skill.Attribute == 'CON' && Skill.IsProficient == false)
                      li #{Skill.Name}: #{(char_info.CON - 10)/2}
                    if(Skill.Attribute == 'CON' && Skill.IsProficient == true)
                      li 
                        b #{Skill.Name}: #{((char_info.CON - 10)/2) + pro}
            br
            div(class='rounded')
              div(class='stats')
                if(char_info.Save1 == 'INT' || char_info.Save2 == 'INT')
                  p Intelligence: #{char_info.INT} &#8226; Check: #{(char_info.INT - 10)/2} &#8226; 
                    b Save: #{((char_info.INT - 10)/2) + pro} 
                else 
                  p Intelligence: #{char_info.INT} &#8226; Check: #{(char_info.INT - 10)/2} &#8226; Save: #{(char_info.INT - 10)/2}
                ul 
                  each Skill in char_info.Skills
                    if(Skill.Attribute == 'INT' && Skill.IsProficient == false)
                      li #{Skill.Name}: #{(char_info.INT - 10)/2}
                    if(Skill.Attribute == 'INT' && Skill.IsProficient == true)
                      li 
                        b #{Skill.Name}: #{((char_info.INT - 10)/2) + pro}
            br
            div(class='rounded')
              div(class='stats')
                if(char_info.Save1 == 'WIS' || char_info.Save2 == 'WIS')
                  p Wisdom: #{char_info.WIS} &#8226; Check: #{(char_info.WIS - 10)/2} &#8226; 
                    b Save: #{((char_info.WIS - 10)/2) + pro} 
                else 
                  p Wisdom: #{char_info.WIS} &#8226; Check: #{(char_info.WIS - 10)/2} &#8226; Save: #{(char_info.WIS - 10)/2} 
                ul 
                  each Skill in char_info.Skills
                    if(Skill.Attribute == 'WIS' && Skill.IsProficient == false)
                      li #{Skill.Name}: #{(char_info.WIS - 10)/2}
                    if(Skill.Attribute == 'WIS' && Skill.IsProficient == true)
                      li 
                        b #{Skill.Name}: #{((char_info.WIS - 10)/2) + pro}
            br
            div(class='rounded')
              div(class='stats')
                if(char_info.Save1 == 'CHA' || char_info.Save2 == 'CHA')
                  p Charisma: #{char_info.CHA} &#8226; Check: #{(char_info.CHA - 10)/2} &#8226; 
                    b Save: #{((char_info.CHA - 10)/2) + pro} 
                else 
                  p Charisma: #{char_info.CHA} &#8226; Check: #{(char_info.CHA - 10)/2} &#8226; Save: #{(char_info.CHA - 10)/2} 
                ul 
                  each Skill in char_info.Skills
                    if(Skill.Attribute == 'CHA' && Skill.IsProficient == false)
                      li #{Skill.Name}: #{(char_info.CHA - 10)/2}
                    if(Skill.Attribute == 'CHA' && Skill.IsProficient == true)
                      li 
                        b #{Skill.Name}: #{((char_info.CHA - 10)/2) + pro}
            br

      div(class='third')
        div(class='card')
          div(class='largeText charName coolFont') #{char_info.Name}
          p(class='charName') #{char_info.Lineage} #{char_info.Class}
          img(class='imgSizing' src=char_info.ImgLocation)
          p(class='charInfo boldInfo') Armor Class: #{char_info.AC} &#8226; Initiative: #{char_info.Init} &#8226; HP: #{char_info.HP}
          br
          
      div(class='third')
        div(class='card')
          p(class='largeText') Features:
            div(class='stats')
              div(class='rounded')
                div(class='features')
                  p Lineage: 
                    a(href=char_info.LineageIdentifier.LineageLink) #{char_info.Lineage}
                ul 
                  if char_info.LineageIdentifier.Feature1 != ''
                    li #{char_info.LineageIdentifier.Feature1}
                  if char_info.LineageIdentifier.Feature2 != ''
                    li #{char_info.LineageIdentifier.Feature2}
                  if char_info.LineageIdentifier.Feature3 != ''
                    li #{char_info.LineageIdentifier.Feature3}
                  if char_info.LineageIdentifier.Feature4 != ''
                    li #{char_info.LineageIdentifier.Feature4}
              br
              div(class='rounded')
                div(class='features')
                  p Class Features: #{char_info.Class}
                  ul
                    div #{sortFeatures(char_info.Features)}
                    each Feature in char_info.Features 
                      li
                        if Feature.SubClass == ''
                          div Level #{Feature.Level}. 
                            a(href=Feature.Link) #{Feature.FeatureName}
                        else if Feature.SubClass != ''
                          div Level #{Feature.Level}. 
                            a(href=Feature.Link) #{Feature.FeatureName} (#{Feature.SubClass})
                        else 
                          div class features not found
              br
              div(class='rounded')
                div(class='features')
                  p Background: 
                    a(href=char_info.Background.BackgroundLink) #{char_info.Background.BackgroundName}
                  ul
                    if(char_info.Background.Feature1 != '') 
                      li 
                        a(href=char_info.Background.Feature1Link) #{char_info.Background.Feature1}
                    if(char_info.Background.Feature2 != '') 
                      li 
                        a(href=char_info.Background.Feature2Link) #{char_info.Background.Feature2}
                    if(char_info.Background.Feature3 != '') 
                      li 
                        a(href=char_info.Background.Feature3Link) #{char_info.Background.Feature3}
                    li Skill #1: #{char_info.Background.Skill1}
                    li Skill #2: #{char_info.Background.Skill2}
              br